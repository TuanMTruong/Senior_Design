Archive member included because of file (symbol)

/usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_divmodhi4.o)
                              adc_skel.o (__divmodhi4)
/usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_exit.o)
                              /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o (exit)
/usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_copy_data.o)
                              lcd_functions.o (__do_copy_data)
/usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_clear_bss.o)
                              adc_skel.o (__do_clear_bss)
/usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

lcd_str_l           0x10              adc_skel.o
i                   0x1               adc_skel.o
lcd_str             0x10              lcd_functions.o
fp_low_result       0x4               adc_skel.o
lcd_str_h           0x10              adc_skel.o
fp_adc_result       0x4               adc_skel.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800100         0x0000ff00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
LOAD adc_skel.o
LOAD lcd_functions.o
LOAD /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a
LOAD /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/libc.a
LOAD /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x482
 *(.vectors)
 .vectors       0x00000000       0x8c /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_copy_data.o)
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
                0x000000ca                __vector_20
                0x000000ca                __vector_28
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_21
                0x000000ca                __vector_15
                0x000000ca                __vector_29
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_18
                0x000000ca                __vector_22
 .text          0x000000ce       0xd2 adc_skel.o
                0x000000ce                spi_init
                0x000000f2                main
 .text          0x000001a0      0x290 lcd_functions.o
                0x000001a0                strobe_lcd
                0x000001b2                clear_display
                0x000001e2                cursor_home
                0x00000212                home_line2
                0x00000242                fill_spaces
                0x0000027c                char2lcd
                0x000002ac                string2lcd
                0x00000306                lcd_init
 .text          0x00000430        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_divmodhi4.o)
 .text          0x00000430        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_exit.o)
 .text          0x00000430        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_copy_data.o)
 .text          0x00000430        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_clear_bss.o)
 .text          0x00000430        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_udivmodhi4.o)
                0x00000430                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000430       0x26 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_divmodhi4.o)
                0x00000430                __divmodhi4
                0x00000430                _div
 .text.libgcc   0x00000456        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000456        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000456        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000456       0x28 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_udivmodhi4.o)
                0x00000456                __udivmodhi4
                0x0000047e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000047e        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_exit.o)
                0x0000047e                exit
                0x0000047e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000047e        0x4 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00000482                _etext = .

.data           0x00800100       0x12 load address 0x00000482
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100        0x0 adc_skel.o
 .data          0x00800100       0x11 lcd_functions.o
                0x00800100                lcd_test
 .data          0x00800111        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_divmodhi4.o)
 .data          0x00800111        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_exit.o)
 .data          0x00800111        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_copy_data.o)
 .data          0x00800111        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_clear_bss.o)
 .data          0x00800111        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800112                . = ALIGN (0x2)
 *fill*         0x00800111        0x1 00
                0x00800112                _edata = .
                0x00800112                PROVIDE (__data_end, .)

.bss            0x00800112       0x39
                0x00800112                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800112        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o
 .bss           0x00800112        0x0 adc_skel.o
 .bss           0x00800112        0x0 lcd_functions.o
 .bss           0x00800112        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x00800112        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_exit.o)
 .bss           0x00800112        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_copy_data.o)
 .bss           0x00800112        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_clear_bss.o)
 .bss           0x00800112        0x0 /usr/local/bin/../lib/gcc/avr/4.5.1/avr51/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800112       0x29 adc_skel.o
                0x00800112                lcd_str_l
                0x00800122                i
                0x00800123                fp_low_result
                0x00800127                lcd_str_h
                0x00800137                fp_adc_result
 COMMON         0x0080013b       0x10 lcd_functions.o
                0x0080013b                lcd_str
                0x0080014b                PROVIDE (__bss_end, .)
                0x00000482                __data_load_start = LOADADDR (.data)
                0x00000494                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080014b        0x0
                0x0080014b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080014b                PROVIDE (__noinit_end, .)
                0x0080014b                _end = .
                0x0080014b                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o

.stabstr        0x00000000       0x81
 *(.stabstr)
 .stabstr       0x00000000       0x81 /usr/local/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr51/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 adc_skel.o
 .debug_aranges
                0x00000020       0x20 lcd_functions.o

.debug_pubnames
                0x00000000      0x112
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x6e adc_skel.o
 .debug_pubnames
                0x0000006e       0xa4 lcd_functions.o

.debug_info     0x00000000      0x7c2
 *(.debug_info)
 .debug_info    0x00000000      0x16e adc_skel.o
 .debug_info    0x0000016e      0x654 lcd_functions.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x25c
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xe2 adc_skel.o
 .debug_abbrev  0x000000e2      0x17a lcd_functions.o

.debug_line     0x00000000      0x654
 *(.debug_line)
 .debug_line    0x00000000      0x182 adc_skel.o
 .debug_line    0x00000182      0x4d2 lcd_functions.o

.debug_frame    0x00000000       0xc0
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 adc_skel.o
 .debug_frame   0x00000030       0x90 lcd_functions.o

.debug_str      0x00000000      0x209
 *(.debug_str)
 .debug_str     0x00000000       0xd7 adc_skel.o
                                0x11b (size before relaxing)
 .debug_str     0x000000d7      0x132 lcd_functions.o
                                0x1bb (size before relaxing)

.debug_loc      0x00000000       0x83
 *(.debug_loc)
 .debug_loc     0x00000000       0x18 adc_skel.o
 .debug_loc     0x00000018       0x6b lcd_functions.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(adc.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x6d
 .debug_pubtypes
                0x00000000       0x35 adc_skel.o
 .debug_pubtypes
                0x00000035       0x38 lcd_functions.o
